#!/bin/sh
#
# Configure options script for re-calling Magick+ compilation options
# required to use the Magick++ library.
#
#

prefix=$MAGICK_HOME
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir=${prefix}/include

usage='Usage: Magick++-config [--cppflags] [--cxxflags] [--exec-prefix] [--ldflags] [--libs] [--prefix] [--version]

 For example, "magick.cpp" may be compiled to produce "magick" as follows:

  "c++ -o magick magick.cpp `Magick++-config --cppflags --cxxflags --ldflags --libs`"'

if test $# -eq 0; then
      echo "${usage}" 1>&2
      exit 1
fi

while test $# -gt 0; do
  case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) optarg= ;;
  esac
  case $1 in
    --prefix=*)
      prefix=$optarg
      ;;
    --prefix)
      echo $prefix
      ;;
    --exec-prefix=*)
      exec_prefix=$optarg
      ;;
    --exec-prefix)
      echo $exec_prefix
      ;;
    --version)
      echo '6.7.0 Q16 '
      ;;
    --cflags)
      echo "-I${includedir} -fopenmp"
      ;;
    --cxxflags)
      echo '-g -O2 -D_REENTRANT -pthreads'
      ;;
    --cppflags)
      echo '-I$MAGICK_HOME/include/ImageMagick'
      ;;
    --ldflags)
      echo '-L$MAGICK_HOME/lib -L$MAGICK_HOME/magick/.libs -L$MAGICK_HOME/magick -L$MAGICK_HOME/wand/.libs -L$MAGICK_HOME/wand'
      ;;
    --libs)
      echo "-L${libdir} -lMagick++ -lMagickWand -lMagickCore -ljbig -ltiff -lfreetype -ljpeg -lpng -lfontconfig -lXext -lXt -lSM -lICE -lX11 -lsocket -lnsl -lbz2 -lxml2 -lz -lm -lgomp -lpthread -lltdl"
      ;;
    *)
      echo "${usage}" 1>&2
      exit 1
      ;;
  esac
  shift
done

